START_POS_LOC	EQU	40H
END_POS_LOC	EQU	41H
VRAM_SIZE	EQU	08H
START_ADDR	EQU	30H
END_ADDR	EQU	37H

		ORG	00H
		SJMP	MAIN

		ORG	30H
MAIN:		MOV	START_POS_LOC, #START_ADDR
		MOV	END_POS_LOC, #END_ADDR

		ACALL	SCAN_ROW
HALT:		SJMP	HALT


;======================================================
SCAN_ROW:	ACALL	GENERATE_SHAPE
		MOV	R0, START_POS_LOC		; VRAM POINTER
		MOV	P0, #00H
		MOV	P1, #00H
		MOV	A, #00000001B
		MOV	R2, #VRAM_SIZE

SCNLP:		MOV	P0, #00H			; CLR SCREEN
		MOV	P1, @R0
		MOV	P0, A
		
		
		RL	A
		INC	R0

		PUSH	02H
		PUSH	A
		
		PUSH	00H			;SWAP
		POP	02H			;PARAM LOAD
		MOV	R3, #VRAM_SIZE		;PARAM LOAD
		ACALL	CHCK_LIMIT
		
		MOV	R0, A
		POP	A
		POP	02H
		DJNZ	R2, SCNLP
		MOV	R2, #VRAM_SIZE

		PUSH	02H
		PUSH	A
		ACALL	DOWN_1
		MOV	R0, A			;ASSIGN R0 TO ITS RETURN VALUE
		POP	A			;RESTORATION OF ACC
		POP	02H			;RESTORATION OF R2
		
		SJMP	SCNLP
		RET

;======================================================
CHCK_LIMIT:	MOV	A, R2
		MOV	B, R3
		CLR	C
		SUBB	A, #START_ADDR
		DIV	AB
		MOV	A, #START_ADDR
		ADD	A, B
		RET

;======================================================
DOWN_1:		DEC	START_POS_LOC
		MOV	R2, START_POS_LOC
		MOV	R3, VRAM_SIZE
		ACALL	CHCK_LIMIT
		MOV	START_POS_LOC, A

		DEC	END_POS_LOC
		MOV	R2, END_POS_LOC
		MOV	R3, #VRAM_SIZE
		ACALL	CHCK_LIMIT
		MOV	END_POS_LOC, A

		MOV	A, START_POS_LOC
		RET
;======================================================
GENERATE_SHAPE:
		MOV	30H, #00011100B
		MOV	31H, #00001000B
		MOV	32H, #00000000B
		MOV	33H, #00000000B
		MOV	34H, #00000000B
		MOV	35H, #00000000B
		MOV	36H, #00000000B
		MOV	37H, #00000000B
		RET

		END